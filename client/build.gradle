plugins {
    id 'application'
}

application {
    mainClassName = 'com.mythicalcreaturesoftware.pcstatsmonitorclient.Main'
}

group 'com.mythicalcreaturesoftware'
version '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    compile project(":pc-stats-monitor-server")
    compile group: 'eu.hansolo', name: 'Medusa', version: '8.3'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Implementation-Title': 'PC Stats Monitor Server',
                'Implementation-Version': version,
                'Main-Class': 'com.mythicalcreaturesoftware.pcstatsmonitorclient.Main'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task copyJar(type: Copy) {
    from "${project.buildDir}/libs"
    into "${projectDir}/scripts"
    rename { String fileName ->
        fileName.replace("-${version}", "")
    }
}

task zipJar(type: Zip) {
    from "${projectDir}/scripts"
    include '*'
    include '*/*'
    archiveName 'client.zip'
    destinationDir(file("${projectDir}/release"))
}

task tarJar(type: Tar) {
    from "${projectDir}/scripts"
    include '*'
    include '*/*'
    archiveName = 'client.tar.gz'
    destinationDir  file("${projectDir}/release")
    compression = Compression.GZIP
}

task release (dependsOn: ['clean', 'fatJar', 'copyJar', 'zipJar', 'tarJar'])
fatJar.mustRunAfter clean
copyJar.mustRunAfter fatJar
tarJar.mustRunAfter copyJar
zipJar.mustRunAfter copyJar